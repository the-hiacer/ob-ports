$OpenBSD: patch-content_app_content_main_runner_impl_cc,v 1.15 2020/05/29 20:03:23 robert Exp $

Index: content/app/content_main_runner_impl.cc
--- content/app/content_main_runner_impl.cc.orig
+++ content/app/content_main_runner_impl.cc
@@ -102,17 +102,17 @@
 #include "base/posix/global_descriptors.h"
 #include "content/public/common/content_descriptors.h"
 
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && !defined(OS_BSD)
 #include "services/service_manager/zygote/common/zygote_fork_delegate_linux.h"
 #endif
-#if !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
 #include "sandbox/linux/services/libc_interceptor.h"
 #include "services/service_manager/zygote/zygote_main.h"
 #endif
 
 #endif  // OS_POSIX || OS_FUCHSIA
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
 #include "base/native_library.h"
 #include "base/rand_util.h"
 #include "services/service_manager/zygote/common/common_sandbox_support_linux.h"
@@ -133,7 +133,7 @@
 #include "content/public/common/content_client.h"
 #endif
 
-#endif  // OS_LINUX
+#endif  // OS_LINUX || OS_BSD
 
 #if !defined(CHROME_MULTIPLE_DLL_BROWSER)
 #include "content/child/field_trial.h"
@@ -165,6 +165,13 @@
 #include "services/service_manager/zygote/host/zygote_host_impl_linux.h"
 #endif
 
+#if defined(OS_BSD)
+#include "base/system/sys_info.h"
+#include "content/public/common/common_sandbox_support_linux.h"
+#include "content/public/common/sandbox_init.h"
+#include "services/service_manager/sandbox/linux/sandbox_linux.h"
+#endif
+
 #if defined(OS_ANDROID)
 #include "content/browser/android/browser_startup_controller.h"
 #endif
@@ -300,7 +307,7 @@ void InitializeZygoteSandboxForBrowserProcess(
 }
 #endif  // BUILDFLAG(USE_ZYGOTE_HANDLE)
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
 
 #if BUILDFLAG(ENABLE_PLUGINS)
 // Loads the (native) libraries but does not initialize them (i.e., does not
@@ -339,7 +346,7 @@ void PreloadLibraryCdms() {
 }
 #endif  // BUILDFLAG(ENABLE_LIBRARY_CDMS)
 
-#if BUILDFLAG(USE_ZYGOTE_HANDLE)
+#if BUILDFLAG(USE_ZYGOTE_HANDLE) || defined(OS_BSD)
 void PreSandboxInit() {
 #if defined(ARCH_CPU_ARM_FAMILY)
   // On ARM, BoringSSL requires access to /proc/cpuinfo to determine processor
@@ -347,9 +354,12 @@ void PreSandboxInit() {
   CRYPTO_library_init();
 #endif
 
+// arc4random
+#if !defined(OS_OPENBSD)
   // Pass BoringSSL a copy of the /dev/urandom file descriptor so RAND_bytes
   // will work inside the sandbox.
   RAND_set_urandom_fd(base::GetUrandomFD());
+#endif
 
 #if BUILDFLAG(ENABLE_PLUGINS)
   // Ensure access to the Pepper plugins before the sandbox is turned on.
@@ -361,6 +371,11 @@ void PreSandboxInit() {
 #endif
   InitializeWebRtcModule();
 
+#if defined(OS_BSD)
+  // "cache" the amount of physical memory before pledge(2)
+  base::SysInfo::AmountOfPhysicalMemoryMB();
+#endif
+
   // Set the android SkFontMgr for blink. We need to ensure this is done
   // before the sandbox is initialized to allow the font manager to access
   // font configuration files on disk.
@@ -397,7 +412,7 @@ void PreSandboxInit() {
 }
 #endif  // BUILDFLAG(USE_ZYGOTE_HANDLE)
 
-#endif  // OS_LINUX
+#endif  // OS_LINUX || OS_BSD
 
 }  // namespace
 
@@ -625,7 +640,7 @@ int ContentMainRunnerImpl::Initialize(const ContentMai
                    base::GlobalDescriptors::kBaseDescriptor);
 #endif  // !OS_ANDROID
 
-#if defined(OS_LINUX) || defined(OS_OPENBSD)
+#if defined(OS_LINUX)
     g_fds->Set(service_manager::kCrashDumpSignal,
                service_manager::kCrashDumpSignal +
                    base::GlobalDescriptors::kBaseDescriptor);
@@ -822,6 +837,16 @@ int ContentMainRunnerImpl::Initialize(const ContentMai
     }
 #endif
 
+#if defined(OS_OPENBSD)
+    if (process_type.empty()) {
+      service_manager::SandboxLinux::Options sandbox_options;
+      service_manager::SandboxLinux::GetInstance()->InitializeSandbox(
+          service_manager::SandboxTypeFromCommandLine(
+              *base::CommandLine::ForCurrentProcess()),
+          service_manager::SandboxLinux::PreSandboxHook(), sandbox_options);
+    }
+#endif
+
     delegate_->SandboxInitialized(process_type);
 
 #if BUILDFLAG(USE_ZYGOTE_HANDLE)
@@ -873,6 +898,11 @@ int ContentMainRunnerImpl::Run(bool start_service_mana
 #endif
 
   RegisterMainThreadFactories();
+
+#if defined(OS_OPENBSD)
+  if (!process_type.empty())
+    PreSandboxInit();
+#endif
 
 #if !defined(CHROME_MULTIPLE_DLL_CHILD)
   if (process_type.empty())
